
Working with Permissions and Privileged Accounts
1、使用普通用户
	Linux上有两种用户：普通用户和root（超级用户）。普通用户在自己的主目录中几乎拥有无限的权力来创建、修改、删除和操作文件，但在该单一位置之外几乎没有权力。
	许多普通用户可以使用系统命令。 相比之下，其他命令仅限于通过 sudo 命令授予有限 root 用户访问权限或直接访问 root 用户帐户的命令。
	一般且最安全的规则是，应该始终以普通用户身份工作，除非某些任务需要特权（root）访问。
2、使用root
	root是Linux 系统上拥有最高权限的帐户。 root 用户可以创建、编辑、移动或删除系统上的任何文件。 root 用户可以重新启动、更改运行级别以及关闭系统。 成为root用户有3种方法：
		①	以root用户登录
		②	使用su（替换用户【substitute user）命令
		③	使用sudo命令
	①	以root用户登录
	在某些 Linux 发行版上，可以通过网络上的 SSH 或在控制台上以交互方式直接以 root 用户身份登录系统。 一些 Linux 发行版默认阻止 SSH root 登录，而其他发行版则由管理员决定。
	不建议通过 SSH 连接到系统并以 root 身份登录。 主要原因是，如果允许跨网络 root 访问系统，那么恶意行为者可能会尝试暴力破解 root 登录。
	不应直接在控制台以 root 身份登录，因为这样做会阻止系统日志记录谁已登录并成为 root。 记录谁使用根用户帐户很重要，因为当出现问题时，想知道哪个管理员执行了操作。 
	保存记录的目的不是为了指责。 尽管如此，仍然有必要满足一些法规要求并纠正需要受教时间或高级培训的系统管理员的行为。
	②	使用 su 命令
	成为root用户的适当方法之一是使用 su 命令。使用 su 的注意事项是用户必须知道 root 用户密码。如果管理员知道root密码，则很难阻止这些管理员直接以root登录。
	使用 su 切换到root用户是可接受的【前提是root密码在每次使用后都发生更改】。在较大的企业中，安全组会维护root密码，系统管理员可以临时查看root密码进行维护。
	root 用户可以在不知道用户密码的情况下使用系统上的任何其他用户帐户。 此功能允许管理员以任何用户身份登录或成为任何用户以进行故障排除，因为用户通常很难准确描述他们遇到的问题。 
	它还可以防止用户向管理员泄露其密码，从而强制用户更改密码。
	su 到另一个帐户是一个简单的过程。 发出 su 命令和想要 su 的用户帐户。如：
		su root
	使用 su 的更好方法是使用 su - 命令，【-】意味着还希望获得root用户的完整环境而不仅仅是账号权限。可通过 env 命令进行检查。使用带有【-】选项的 su 命令，不需指定root，因为默认为root。
	使用 su - 相当于以root用户身份登录控制台。任何用户都可以 su 到任何其他用户账号，这需要知道其他用户的密码。
	③	使用 sudo 命令
	获得root访问权限的最佳方法是是使用“substitute user do”或“execute a command as another user”（sudo）命令。sudo命令允许适当配置的用户账号以root用户身份发出单独的命令。
	首次使用时，sudo 要求sudoer（配置为使用sudo的用户）提供自己的密码。如：
		$ sudo env
		
		我们信任您已经从系统管理员那里了解了日常注意事项。
		总结起来无外乎这三点：
		
		    #1) 尊重别人的隐私。
		    #2) 输入前要先考虑(后果和风险)。
		    #3) 权力越大，责任越大。
		
		[sudo] miggi 的密码：
	④	创建 sudoers
	必须以root身份并使用 visudo 编辑/etc/sudoers文件。/etc/sudoers 文件是一个简单的文本文件，描述可以使用 root 或其他用户权限的用户、组和命令。 
	可以创建具有非常严格的权限（即以 root 身份运行单个命令）或宽松的 sudoer：以 root 身份运行任何命令而无需输入密码。
	不建议设置用户账号不发出密码就使用 sudo 。在发出命令时使用密码是为了使用root权限时更难犯错误。sudo命令本身也是如此。
3、读取和修改权限
	①	读、写和执行
	Linux 的三种文件权限或模式是读 (r)、写 (w) 和执行 (x)：
		》读（r）		查看文件，或列出目录内容
		》写（w）		创建和修改文件，或在目录中复制、移动和创建文件
		》执行（x）		执行/运行文件，或进入【cd】到目录
	在权限中使用 rwx 指定称为符号模式。 符号模式是识别权限的两种方法之一。 另一种是数字模式，为每个rwx权限赋值。
	②	数字权限值
	每种权限模式都有其自己指定的数值。 这种快捷方法使系统管理员可以更轻松地设置权限。读取权限的值为 4，写入权限的值为 2，执行权限的值为 1。权限值的范围为 0 到 7。零权限值表示没有权限。
		数字权限值：
		读（r）		4
		写（w）		2
		执行（x）	1
	③	组权限
	四种文件权限适用于用户组：用户、组、其他和全部。 “所有”组包括用户、组和其他。 它是全局分配文件或目录权限的简写方法。 每个组也有一个简写名称。
		组权限
		用户		u
		组			g
		其他		o
		全部		a
	可以独立为每个组或同时为所有组设置文件权限。每个组的读、写和执行权限被分配给对应的Linux文件或目录。
	⑤	修改文件权限
	文件系统上的每个文件都具有允许或拒绝用户、组和其他人访问的权限。使用 chmod 更改文件权限。chmod可以使用数字形式或符号形式【rwx和ugoa】权限。
		》符号形式
			使用符号形式，要做就是给指定组【ugoa】添加【+】所需的权限，并减去【-】不需要的权限；也可使用【=】明确指定完整的权限。
			删除其他人的读权限									chmod o-r file.txt
			添加文件所有者执行权限								chmod u+x file.sh
			添加文件所有者和所属组执行权限，其他人的读权限		chmod ug+x,o+w file.txt
			删除文件所有者的执行权限，其他人的读、写权限		chmod a-x,o-rw file.txt
			添加所有人的执行权限，删除其他人的读权限			chmod a+x,o-r file.txt
			如果没有指定要为其添加权限或减少权限的组，则系统默认行为是假定目标组是全部。 从安全角度来看，这可能很危险。 除非打算这样做，否则切勿向所有组授予权限。
			添加所有人的执行权限								chmod +x file.txt
		》数字形式
			使用数值方法移除其他人（组）的读权限。首先计算文件当前权限值【664】和想要的新的权限值【660】：
				chmod 660 file.txt
			使用数字方法，无需添加或减少权限。只需为该文件重新分配权限值即可。给新建文件【664】全部组添加执行权限，并减去其他人（组）的读权限：
				chmod 771 file.txt
		》默认权限解释：umask
			文件的默认权限为【666】，目录为【777】，通过全局设置【umask】会屏蔽或过滤默认授予文件（或目录 ）的某些权限。默认情况下不会授予执行权限，因此 umask 设置不会显式屏蔽它。 
			要找出用户帐户的默认 umask 值，请使用 umask 命令：
				$ umask
				0022
			这样，新建文件或目录时会屏蔽组的写（w）权限和其他人的写权限。
			可以通过 umask xxxx 命令更改 umask 的值。这会在当前登录会话期间暂时更改 umask。要永久更改 umask，可将 umask xxxx 添加到主目录的 .bashrc 文件中。

	
Customizing the User Experience
1、更改主目录选项
	在每个用户的主目录中，一些隐藏文件控制着用户的大部分环境。
	①	登录和非登录 shells
	交互式登录shell是一种通过用户名/密码或SSH key进行的SSH或直接登录的shell；交互式非登录shell是一种可以从命令行调用子shell的shell，如：
		$ echo $SHLVL
		1
		$ bash
		$ echo $SHLVL
		2
	$SHLVL是一个跟踪shell级别的变量。当第一次使用用户名和密码，或密钥登录交互式shell时，$SHLVL为1。
	在第一个shell之后调用的子shell会递增SHLVL变量。以这种方式调用的子 shell 是交互式非登录 shell，因为它是交互式的，但不涉及新的登录。
	②	/etc/bashrc
	当以交互式方式登录Linux时，/etc/bashrc是第一个要执行的个性化文件。/etc/bashrc文件也在交互式非登录shell上执行。/etc/bashrc文件是一个全局个性化文件，为登录shell（bash）提供函数和别名。该文件应保持原样。
	/etc/bashrc文件类似于主目录中的.bashrc文件。如果需要更改函数和别名，在此文件中进行更改。
	③	/etc/profile
	/etc/profile是系统范围的启动文件。它为所有用户提供通用变量、路径和其他设置。
	注意：除非知道在干什么，否则不应该编辑此文件。
	最好编辑用户主目录中的个性化文件，或在/etc/profile.d下创建其他全局个性化文件。这些全局设置可以被位于主目录中的各个个性化启动文件覆盖。
	它是登录Linux系统时执行的第二个环境个性化文件。它还调用了/etc/bashrc文件，因此/etc/bashrc被执行了两次。
	/etc/profile文件类似于主目录中的.bash_profile文件。
	④	.bashrc
	.bashrc文件是主目录中的一个隐藏文件。该文件用于设置并包括可能需要的任何功能以及设置命令的别名。全局个性化文件执行后，.bashrc文件将执行。.bashrc在交互式非登录shell中执行。
	建议将所有自定义内容放在.bashrc文件中，因为它是针对交互式登录和非登录shell执行的。在.bashrc文件中进行shell自定义可以保证shell的一致性。
	⑤	.bash_profile
	交互式登录时执行的最后一个文件是主目录中的.bash_profile文件。可以在此文件中放置将在交互式登录shell中运行的自定义项，但它们不可用于交互式非登录shell。
	⑥	.bash_logout
	.bash_logout文件在注销时执行。该文件是可选的。它的存在只是为了允许用户在退出时清理临时文件。还可以用它来记录使用shell的时间或在注销时发送消息。
2、/etc/skel目录
	/etc/skel目录是一个特殊目录，用于保存在创建用户账号时，在其主目录中要包含的文件。在/etc/skel中创建的文件不必隐藏，尽管默认文件是隐藏的。这些文件在账号创建期间被复制到用户的主目录。
	这些是环境个性化文件的全局副本。如果在 /etc/skel 目录中创建文件，则会在帐户创建期间将其复制到新用户的主目录。 
	创建帐户后，现有用户将不会收到放置在 /etc/skel 中的文件。必须手动将它们复制到每个用户的主目录并更改权限，以便用户可以完全控制它们。
3、定义shell提示符
	为了设置自定义提示符，shell提供了表示位置、用户名、时间、回车符等的转义字符列表。系统在/etc/bashrc文件中设置默认提示符。可以在用户的~/.bashrc文件中覆盖它。
	Bash允许通过插入一些反斜杠转义的特殊字符来自定义 这些提示字符串。如：
		特殊字符			描述
		\a					ASCII蜂鸣字符（07）
		\d					“星期 月份日期”格式的日期（如"Tue May 26"）
		\D{format}			format被传递给strftime(3)，结果被插入到字符串中；format为空会产生特定于区域设置的时间表示。需要使用大括号。
		\e					ASCII转义字符（033）
		\h					第一个点【.】之前的主机名
		\H					主机名
		\j					当前由shell管理的作业数
		\l					shell的终端设备名的基本名称【basename】
		\n					换行符
		\r					回车符
		\s					shell名称，$0的基本名称（最后一个斜杠后面的部分）
		\t					当前时间【24小时制格式：HH:MM:SS】
		\T					当前时间【12小时制格式：HH:MM:SS】
		\@					当前时间【12小时制格式：am/pm】
		\A					当前时间【24小时制格式：HH:MM】
		\u					当前用户的用户名
		\v					bash版本（如：2.00
		\V					bash的发布，版本+补丁等级（如：2.00.0）
		\w					当前工作目录，其中$HOME用【~】缩写（使用PROMPT_DIRTRIM变量的值）
		\W					当前工作目录的基本名称，$HOME用【~】缩写
		\!					这个命令历史编号
		\#					这个命令的命令号
		\$					如果有效UID是0，则是#，否则是$。
		\nnnn				八进制数nnn对应的字符
		\\					反斜杠
		\[					开始一系列非打印字符，可用于将终端控制序列嵌入到提示中
		\]					结束非打印字符序列


Managing Users
	管理用户包含以下任务：
		①	创建用户
		②	修改用户
		③	移除用户
		④	授权对文件和目录的访问权限
		⑤	限制对文件和目录的访问
		⑥	执行安全政策
		⑦	设置文件和目录权限
1、用户和组ID编号约定
	有一些与在 Linux 系统上创建和维护用户帐户相关的准则，如下所示【这些不是硬性规定，但大多数公司系统通常都会遵循它们】：
	用户和组帐户的编号约定
		UID		GID		描述
		0		0		root
		1-999	1-999	系统/服务账号
		1000+	1000+	用户账号
	用户帐户 UID 和 GID 编号通常从 1000 开始，每个新帐户递增 1。root用户的UID和GID始终为0；系统上的其他用户没有这些用户和组 ID。
	系统和服务帐户不是人类用户帐户，通常没有与之关联的交互式 shell。这些帐户的 UID 和 GID 范围为 1-999。 这些分离使得系统管理比向用户帐户随机分配 UID 和 GID 更加容易。
2、创建用户账号
	useradd命令是向系统添加新用户的标准Linux命令行方法。为其提供一个用户名作为参数即可创建一个用户。如：
		useradd jsmith
	这会创建主目录/home/jsmith，用默认的隐藏环境文件来填充它，并将一个条目放入/etc/passwd中。设置用户GECOS信息：
		useradd -c "Jane Smith,Room 26,212-555-1000,jsmith@example.com" jsmith
	用户的/etc/passwd条目中的各个字段【冒号分隔】如下（从左到右）：
		用户名、/etc/passwd密码字段、UID、GID、注释字段【GECOS】、主目录、默认shell
	密码不存储在 /etc/passwd 文件中。 /etc/shadow 字段是指 /etc/shadow 文件，该文件包含每个用户的加密密码，只有 root 用户可读。
	新建用户，由于账号没有密码(/etc/shadow文件中该用户条目的密码字段为【!!】)，不能登录系统。使用 passwd 为账号提供密码：
		passwd jsmith
3、修改用户账号
	使用 usermod 修改用户账号，而无需编辑 /etc/passwd、主目录或配置文件。usermod 更改与用户账号相关的所有内容：
		①	将用户添加到附加组
		②	更改/etc/passwd中用户的注释
		③	更改用户主目录
		④	设置账号过期日期
		⑤	移除过期日期
		⑥	更改用户的登录名（用户名）
		⑦	锁定/解锁用户账号
		⑧	移动用户主目录中的内容
		⑨	更改用户登录shell
		⑩	更改用户ID
	Ⅰ	加入到附加组
	创建新用户帐户时，系统会为用户分配一个用户 ID (UID) 和一个主组 ID (GID)。【它们可以是相同的序列号，但情况并非总是如此。】
	将用户添加到/etc/group中的组【可以是组名，或ID号】。如：
		usermod -a -G 1002 jsmith
		usermod -a -G group1 jsmith
	将用户添加到附加组后，该用户就有了该组的权限【可以访问附加组的共享目录】。
	注意，必须同时使用 -a（追加）和 -G（附加组）。如果不使用 -a 选项，用户将从所有其他附加组中删除，并仅添加指定的附加组。
	一个用户可以是多个组的成员。将用户一次性添加到多个组中：
		usermod -a -G 1002,1003 jsmith
	Ⅱ	更改用户注释字段
	可以直接编辑/etc/passwd文件【尽管这会带来很大的风险】。还可以使用带【-c】选项的 usermod 命令来更改GECOS字段。
		usermod -c "Jane R Smith" jsmith
	还可以使用 chfn 命令进行修改。如：
		chfn -f "Janie Smith" jsmith
	chfn 命令更改 finger 信息。 Finger 是一个古老的守护进程，运行在早期的 Unix 系统和一些 Linux 系统上，并提供有关用户的信息。 由于安全问题，现在几乎没有人使用它，但该信息仍然被称为手指信息。 
	-f 选项更改指定帐户的用户全名字段。 还有办公室 (-o)、办公室电话 (-p) 和家庭电话 (-h) 的其他选项。 一般来说，GECOS 字段仅使用用户的全名或服务的名称和用途。
	chfn 命令由 util-linux-user 提供。
	Ⅲ	设置账号的到期日期
		通过【-e】选项指定账号的过期日期。日期格式为 YYYY-MM-DD 。
		usermod -e 
	Ⅳ	更改用户的登录shell
		有三种方法更改用户的默认shell：usermod、chsh、直接编辑/etc/passwd 【不推荐】。
		usermod命令使用【-s】选项指定新的shell。如：
		usermod -s /bin/sh jsmith
		注意：只有root用户可以修改/etc/passwd文件或使用usemod。任何用户都可以使用chsh修改其shell：
		chsh -s /bin/zsh
	》扩展
		man usermod
4、删除用户账号
	要从系统中删除用户账号，使用 userdel 命令，并提供要删除的账号的用户名。如：
		userdel jsmith
	该命令会从 /etc/passwd 和 /etc/shadow 中删除用户条目，但会保持用户的主目录不变。保留用户的主目录可确保只有 root 用户才能访问该用户留下的对公司可能很重要的任何文档。
	通过【-r】选项，同时删除用户的主目录及其中的所有文件：
		userdel -r jsmith
5、强制更改密码
	可以使用 chage 命令轻松审核用户的账号设置。-l 选项列出指定用户账号的当前设置。如：
		# chage -l miggi
		最近一次密码修改时间                                    ：12月 03, 2023
		密码过期时间                                    ：从不
		密码失效时间                                    ：从不
		帐户过期时间                                            ：从不
		两次改变密码之间相距的最小天数          ：0
		两次改变密码之间相距的最大天数          ：99999
		在密码过期之前警告的天数        ：7
	除了定期强制变更密码外，还应该设定最短变更期限。如，强制每90天更改一次密码【-M 90】，并将密码更改之间的最小天数设置为1（-m 1）。
		# chage -M 90 -m jsmith
	chage 命令更改密码更改之间的天数和上次密码更改日期。 系统使用这些信息来确定用户何时必须更改密码。
	密码是一种弱身份验证形式，因为如果用户写下密码，它们可能会被猜测、破解或以纯文本形式读取。 因此，您必须确保经常更改密码并且不重复使用。
6、管理组而不是用户
	管理一组用户的权限时，定义和管理组比单独管理每个用户更方便。组管理允许执行以下操作：
		①	管理目录和文件等资源的权限
		②	根据工作职能管理权限
		③	更改大量用户的权限，而不是单独更改每个用户的权限
		④	将用户添加到组，或从组中移除。方便共享文件和目录
		⑤	限制敏感目录和文件的权限
	》示例：
		su - root
		mkdir /opt/finance			
		chgrp finance /opt/finance	# 更改目录的所属组
		chmod 770 /opt/finance		# 更改目录的权限
		su - test					# 切换到普通用户
		cd /opt/finance			
		touch test.txt				# 在/opt/finance目录中创建文件
		chgrp fiance test.txt		# 更改文件的所属组


Connecting to a Network
1、接入网络
	将服务器系统接入现有网络不需要很高的技能。如今，只要新系统上线，动态主机配置协议 (DHCP) 服务器就会为其提供 IP 地址、子网掩码、网关、域名系统 (DNS) 服务器和一些基本路由信息。
	关于 DHCP 和服务器有两种思想流派。 第一个主张所有服务器系统都应该有静态 IP 地址，第二个主张所有系统都应该使用 DHCP 进行 IP 地址分配和管理。
	Ⅰ	静态IP地址
		静态IP地址是嵌入到配置文件中的“硬编码”IP地址。静态IP地址不依赖于也不使用DHCP服务。应将服务器、网络设备（交换机、路由器、WiFI接入点）、打印机和任何支持IP的非移动系统使用静态IP地址。
		工作站、笔记本、平板、电话和其他移动设备使用DHCP。
		使用静态IP地址池的优点之一是网络服务稳定，另一个优点是，即使DNS和DHCP关闭，也可以找到关键系统。静态 IP 地址可为您提供所需的稳定性，无论任何其他服务的状态如何。
		某些网络服务需要它们所在的服务器系统的静态 IP 地址。 FTP、Web、VPN、数据库、Active Directory 和 DNS 等服务需要或建议使用静态 IP 地址。 
		反对静态 IP 寻址的主要缺点和争论是管理。 争论的焦点是管理静态 IP 地址是一项劳动密集型工作，并且可能会导致网络其他地方发生冲突。
	Ⅱ	动态IP地址
		


	
	



